{"mappings":"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","sources":["example/aoRender.js","src/materials/AmbientOcclusionMaterial.js","node_modules/three/examples/jsm/libs/stats.module.js","example/lib/mikktspace.module.js","example/lib/BufferGeometryUtils.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingSceneGenerator } from '../src/index.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { AmbientOcclusionMaterial } from '../src/materials/AmbientOcclusionMaterial.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\nimport { MeshBVHUniformStruct } from 'three-mesh-bvh';\nimport * as MikkTSpace from './lib/mikktspace.module.js';\nimport { mergeVertices } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport { computeTangents } from './lib/BufferGeometryUtils.js';\n// import { computeTangents, mergeVertices } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\n\nlet renderer, controls, camera, scene, stats;\nlet fsQuad, target1, target2, materials;\nlet samplesEl, samples, totalSamples;\nconst params = {\n\n\tresolutionScale: 1 / window.devicePixelRatio,\n\tradius: 2.0,\n\tsamplesPerFrame: 2.0,\n\taccumulate: true,\n\tpause: false,\n\n};\n\ninit();\n\nasync function init() {\n\n\t// initialize renderer\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( { transparent: true } ) );\n\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\tcamera.position.set( - 4, 2, 3 );\n\n\tscene = new THREE.Scene();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\treset();\n\n\t} );\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\t// initialize render targs\n\ttarget1 = new THREE.WebGLRenderTarget( 1, 1, { type: THREE.FloatType, encoding: THREE.LinearEncoding } );\n\n\ttarget2 = new THREE.WebGLRenderTarget( 1, 1, { type: THREE.FloatType, encoding: THREE.LinearEncoding } );\n\n\tmaterials = [];\n\n\n\tconst generator = new PathTracingSceneGenerator();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/gltf-demo-models/main/material-balls/material-ball.glb' )\n\t\t.then( async gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\t// scale the scene to a reasonable size\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst sphere = new THREE.Sphere();\n\t\t\tbox.getBoundingSphere( sphere );\n\n\t\t\tgltf.scene.scale.setScalar( 2.5 / sphere.radius );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\t// position the floor\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0x1a1a1a } ),\n\t\t\t);\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.025;\n\t\t\tgroup.add( floor );\n\n\t\t\tawait MikkTSpace.ready;\n\n\t\t\t// requires bundle support for top level await\n\t\t\tgroup.traverse( c => {\n\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tconst geometry = c.geometry;\n\t\t\t\t\tif ( ! ( 'tangent' in geometry.attributes ) ) {\n\n\t\t\t\t\t\tc.geometry = computeTangents( geometry, MikkTSpace );\n\t\t\t\t\t\tc.geometry = mergeVertices( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tconst { bvh } = result;\n\n\t\t\tconst bvhUniform = new MeshBVHUniformStruct();\n\t\t\tbvhUniform.updateFrom( bvh );\n\n\t\t\t// TODO: for some reason creating multiple materials _really_ slows down the rendering?\n\t\t\tconst materialMap = new Map();\n\t\t\tconst group = result.scene;\n\t\t\tgroup.traverse( c => {\n\n\t\t\t\t// reuse materials as much as possible since different ones cause slow down\n\t\t\t\tif ( c.isMesh ) {\n\n\t\t\t\t\tconst normalMap = c.material.normalMap;\n\t\t\t\t\tif ( ! materialMap.has( normalMap ) ) {\n\n\t\t\t\t\t\tconst material = new AmbientOcclusionMaterial( {\n\n\t\t\t\t\t\t\tbvh: bvhUniform,\n\t\t\t\t\t\t\tnormalScale: c.material.normalScale,\n\t\t\t\t\t\t\tnormalMap,\n\t\t\t\t\t\t\tnormalMapType: c.material.normalMapType,\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tmaterialMap.set( normalMap, material );\n\t\t\t\t\t\tmaterials.push( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tc.material = materialMap.get( normalMap );\n\n\t\t\t\t}\n\n\t\t\t} );\n\t\t\tscene.add( group );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait gltfPromise;\n\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tgui.add( params, 'resolutionScale', 0.1, 1 ).onChange( onResize );\n\tgui.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tgui.add( params, 'radius', 0, 4 ).onChange( reset );\n\tgui.add( params, 'accumulate' ).onChange( reset );\n\tgui.add( params, 'pause' );\n\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.domElement );\n\n\treset();\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst dpr = window.devicePixelRatio * params.resolutionScale;\n\n\ttarget1.setSize( w * dpr, h * dpr );\n\ttarget2.setSize( w * dpr, h * dpr );\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\treset();\n\n}\n\nfunction reset() {\n\n\tsamples = 0;\n\ttotalSamples = 0;\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tstats.update();\n\n\t// update all the material parameters\n\tmaterials.forEach( material => {\n\n\t\tif ( ! params.pause ) {\n\n\t\t\tmaterial.seed ++;\n\n\t\t}\n\n\t\tmaterial.radius = params.radius;\n\t\tmaterial.setDefine( 'SAMPLES', params.samplesPerFrame );\n\n\t} );\n\n\t// update the render targets if it's a first frame or not paused\n\tif ( samples === 0 || ! params.pause ) {\n\n\t\tsamples ++;\n\t\ttotalSamples += params.samplesPerFrame;\n\n\t\tif ( params.accumulate && ! params.pause ) {\n\n\t\t\tconst w = target1.width;\n\t\t\tconst h = target1.height;\n\t\t\tcamera.setViewOffset(\n\t\t\t\tw, h,\n\t\t\t\tMath.random() - 0.5, Math.random() - 0.5,\n\t\t\t\tw, h,\n\t\t\t);\n\n\t\t}\n\n\t\trenderer.setRenderTarget( target1 );\n\t\trenderer.render( scene, camera );\n\n\t\trenderer.setRenderTarget( target2 );\n\t\trenderer.autoClear = false;\n\t\tfsQuad.material.map = target1.texture;\n\t\tfsQuad.material.opacity = params.accumulate ? 1 / samples : 1;\n\t\tfsQuad.render( renderer );\n\t\trenderer.autoClear = true;\n\n\t}\n\n\t// render to screen\n\trenderer.setRenderTarget( null );\n\tfsQuad.material.map = target2.texture;\n\tfsQuad.material.opacity = 1;\n\tfsQuad.render( renderer );\n\n\tsamplesEl.innerText = `Samples: ${ totalSamples }`;\n\n}\n\n\n\n\n","import { ShaderMaterial, TangentSpaceNormalMap, Vector2 } from 'three';\nimport {\n\tMeshBVHUniformStruct, shaderStructs, shaderIntersectFunction,\n} from 'three-mesh-bvh';\nimport { shaderMaterialStructs, pathTracingHelpers } from '../shader/shaderStructs.js';\n\nexport class AmbientOcclusionMaterial extends ShaderMaterial {\n\n\tget normalMap() {\n\n\t\treturn this.uniforms.normalMap.value;\n\n\t}\n\n\tset normalMap( v ) {\n\n\t\tthis.uniforms.normalMap.value = v;\n\t\tthis.setDefine( 'USE_NORMALMAP', v ? null : '' );\n\n\t}\n\n\tget normalMapType() {\n\n\t\treturn TangentSpaceNormalMap;\n\n\t}\n\n\tset normalMapType( v ) {\n\n\t\tif ( v !== TangentSpaceNormalMap ) {\n\n\t\t\tthrow new Error( 'AmbientOcclusionMaterial: Only tangent space normal map are supported' );\n\n\t\t}\n\n\t}\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLES: 10,\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tbvh: { value: new MeshBVHUniformStruct() },\n\t\t\t\tradius: { value: 1.0 },\n\t\t\t\tseed: { value: 0 },\n\n\t\t\t\tnormalMap: { value: null },\n\t\t\t\tnormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vNorm;\n\t\t\t\tvarying vec3 vPos;\n\n\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvarying vec4 vTan;\n\n\t\t\t\t#endif\n\n                void main() {\n\n                    vec4 mvPosition = vec4( position, 1.0 );\n                    mvPosition = modelViewMatrix * mvPosition;\n                    gl_Position = projectionMatrix * mvPosition;\n\n\t\t\t\t\tmat3 modelNormalMatrix = transpose( inverse( mat3( modelMatrix ) ) );\n\t\t\t\t\tvNorm = normalize( modelNormalMatrix * normal );\n\t\t\t\t\tvPos = ( modelMatrix * vec4( position, 1.0 ) ).xyz;\n\n\t\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\t\tvUv = uv;\n\t\t\t\t\t\tvTan = tangent;\n\n\t\t\t\t\t#endif\n\n                }\n\n            `,\n\n\t\t\tfragmentShader: /* glsl */`\n                #define RAY_OFFSET 1e-5\n\t\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\n                precision highp isampler2D;\n                precision highp usampler2D;\n                precision highp sampler2DArray;\n\t\t\t\tvec4 envMapTexelToLinear( vec4 a ) { return a; }\n                #include <common>\n\t\t\t\t#include <cube_uv_reflection_fragment>\n\n                ${ shaderStructs }\n                ${ shaderIntersectFunction }\n\t\t\t\t${ shaderMaterialStructs }\n\t\t\t\t${ pathTracingHelpers }\n\n                uniform BVH bvh;\n                uniform int seed;\n\t\t\t\tuniform float radius;\n\n\t\t\t\tvarying vec3 vNorm;\n\t\t\t\tvarying vec3 vPos;\n\n\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\tuniform sampler2D normalMap;\n\t\t\t\t\tuniform vec2 normalScale;\n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvarying vec4 vTan;\n\n\t\t\t\t#endif\n\n                void main() {\n\n\t\t\t\t\trng_initialize( gl_FragCoord.xy, seed );\n\n\t\t\t\t\t// compute the flat face surface normal\n\t\t\t\t\tvec3 fdx = vec3( dFdx( vPos.x ), dFdx( vPos.y ), dFdx( vPos.z ) );\n\t\t\t\t\tvec3 fdy = vec3( dFdy( vPos.x ), dFdy( vPos.y ), dFdy( vPos.z ) );\n\t\t\t\t\tvec3 faceNormal = normalize( cross( fdx, fdy ) );\n\n\t\t\t\t\t// find the max component to scale the offset to account for floating point error\n\t\t\t\t\tvec3 absPoint = abs( vPos );\n\t\t\t\t\tfloat maxPoint = max( absPoint.x, max( absPoint.y, absPoint.z ) );\n\t\t\t\t\tvec3 normal = vNorm;\n\n\t\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\t\t// some provided tangents can be malformed (0, 0, 0) causing the normal to be degenerate\n\t\t\t\t\t\t// resulting in NaNs and slow path tracing.\n\t\t\t\t\t\tif ( length( vTan.xyz ) > 0.0 ) {\n\n\t\t\t\t\t\t\tvec2 uv = vUv;\n\t\t\t\t\t\t\tvec3 tangent = normalize( vTan.xyz );\n\t\t\t\t\t\t\tvec3 bitangent = normalize( cross( normal, tangent ) * vTan.w );\n\t\t\t\t\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t\t\t\t\t\tvec3 texNormal = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;\n\t\t\t\t\t\t\ttexNormal.xy *= normalScale;\n\t\t\t\t\t\t\tnormal = vTBN * texNormal;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec3 rayOrigin = vPos + faceNormal * ( maxPoint + 1.0 ) * RAY_OFFSET;\n\t\t\t\t\tfloat accumulated = 0.0;\n\t\t\t\t\tfor ( int i = 0; i < SAMPLES; i ++ ) {\n\n\t\t\t\t\t\t// sample the cosine weighted hemisphere and discard the sample if it's below\n\t\t\t\t\t\t// the geometric surface\n\t\t\t\t\t\tvec3 rayDirection = getHemisphereSample( normalize( normal ), rand4().xy );\n\n\t\t\t\t\t\t// check if we hit the mesh and its within the specified radius\n\t\t\t\t\t\tfloat side = 1.0;\n\t\t\t\t\t\tfloat dist = 0.0;\n\t\t\t\t\t\tvec3 barycoord = vec3( 0.0 );\n\t\t\t\t\t\tvec3 outNormal = vec3( 0.0 );\n\t\t\t\t\t\tuvec4 faceIndices = uvec4( 0u );\n\n\t\t\t\t\t\t// if the ray is above the geometry surface, and it doesn't hit another surface within the specified radius then\n\t\t\t\t\t\t// we consider it lit\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdot( rayDirection, faceNormal ) > 0.0 &&\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t! bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, outNormal, barycoord, side, dist ) ||\n\t\t\t\t\t\t\t\tdist > radius\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\taccumulated += 1.0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl_FragColor.rgb = vec3( accumulated / float( SAMPLES ) );\n\t\t\t\t\tgl_FragColor.a = 1.0;\n\n                }\n\n            `\n\n\t\t} );\n\n\t\tfor ( const key in this.uniforms ) {\n\n\t\t\tif ( ! ( key in this ) ) {\n\n\t\t\t\tObject.defineProperty( this, key, {\n\n\t\t\t\t\tget() {\n\n\t\t\t\t\t\treturn this.uniforms[ key ].value;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tset( v ) {\n\n\t\t\t\t\t\tthis.uniforms[ key ].value = v;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetDefine( name, value = undefined ) {\n\n\t\tif ( value === undefined || value === null ) {\n\n\t\t\tif ( name in this.defines ) {\n\n\t\t\t\tdelete this.defines[ name ];\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this.defines[ name ] !== value ) {\n\n\t\t\t\tthis.defines[ name ] = value;\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","const lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachegetFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n    if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachegetFloat32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getFloat32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n* Generates vertex tangents for the given position/normal/texcoord attributes.\n* @param {Float32Array} position\n* @param {Float32Array} normal\n* @param {Float32Array} texcoord\n* @returns {Float32Array}\n*/\nexport function generateTangents(position, normal, texcoord) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArrayF32ToWasm0(position, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArrayF32ToWasm0(normal, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passArrayF32ToWasm0(texcoord, wasm.__wbindgen_malloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.generateTangents(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v3 = getArrayF32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4);\n        return v3;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n//\n\nconst wasmDataURI = 'data:application/octet-stream;base64,';\n\nexport let wasm;\n\nexport let isReady = false;\n\nexport const ready = fetch(wasmDataURI)\n    .then((res) => res.arrayBuffer())\n    .then((buffer) => WebAssembly.instantiate(buffer, {\n        './mikktspace_module_bg.js': {__wbindgen_string_new, __wbindgen_rethrow}\n    }))\n    .then((result) => {\n        wasm = result.instance.exports;\n        isReady = true;\n    });\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tMathUtils,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\n\nfunction computeTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst srcArray = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\t\t\tconst dstArray = new Float32Array( attribute.getCount() * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.getCount(); i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = MathUtils.denormalize( attribute.getX( i ), srcArray );\n\t\t\t\tdstArray[ j ++ ] = MathUtils.denormalize( attribute.getY( i ), srcArray );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = MathUtils.denormalize( attribute.getZ( i ), srcArray );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry )\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * @param  {Array<BufferGeometry>} geometries\n * @param  {Boolean} useGroups\n * @return {BufferGeometry}\n */\nfunction mergeBufferGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\t// gather .userData\n\n\t\tmergedGeometry.userData.mergedUserData = mergedGeometry.userData.mergedUserData || [];\n\t\tmergedGeometry.userData.mergedUserData.push( geometry.userData );\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeBufferAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeBufferAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {BufferAttribute}\n */\nfunction mergeBufferAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tarray.set( attributes[ i ].array, offset );\n\n\t\toffset += attributes[ i ].array.length;\n\n\t}\n\n\treturn new BufferAttribute( array, itemSize, normalized );\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {Array<InterleavedBufferAttribute>}\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n/**\n * @param {Array<BufferGeometry>} geometry\n * @return {number}\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} tolerance\n * @return {BufferGeometry>}\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst attrArrays = {};\n\tconst morphAttrsArrays = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\n\t// initialize the arrays\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\n\t\tattrArrays[ name ] = [];\n\n\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\tif ( morphAttr ) {\n\n\t\t\tmorphAttrsArrays[ name ] = new Array( morphAttr.length ).fill().map( () => [] );\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst decimalShift = Math.log10( 1 / tolerance );\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the attribute arrays\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newarray = attrArrays[ name ];\n\t\t\t\tconst newMorphArrays = morphAttrsArrays[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tnewarray.push( attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ].push( morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// Generate typed arrays from new attribute arrays and update\n\t// the attributeBuffers\n\tconst result = geometry.clone();\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst oldAttribute = geometry.getAttribute( name );\n\n\t\tconst buffer = new oldAttribute.array.constructor( attrArrays[ name ] );\n\t\tconst attribute = new BufferAttribute( buffer, oldAttribute.itemSize, oldAttribute.normalized );\n\n\t\tresult.setAttribute( name, attribute );\n\n\t\t// Update the attribute arrays\n\t\tif ( name in morphAttrsArrays ) {\n\n\t\t\tfor ( let j = 0; j < morphAttrsArrays[ name ].length; j ++ ) {\n\n\t\t\t\tconst oldMorphAttribute = geometry.morphAttributes[ name ][ j ];\n\n\t\t\t\tconst buffer = new oldMorphAttribute.array.constructor( morphAttrsArrays[ name ][ j ] );\n\t\t\t\tconst morphAttribute = new BufferAttribute( buffer, oldMorphAttribute.itemSize, oldMorphAttribute.normalized );\n\t\t\t\tresult.morphAttributes[ name ][ j ] = morphAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} drawMode\n * @return {BufferGeometry>}\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n * Helpful for Raytracing or Decals.\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n * @return {Object} An Object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tif ( object.geometry.isBufferGeometry !== true ) {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils: Geometry is not of type BufferGeometry.' );\n\t\treturn null;\n\n\t}\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tmaterial,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( material.morphTargets && morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.boneTransform( a, _vA );\n\t\t\tobject.boneTransform( b, _vB );\n\t\t\tobject.boneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group, groupMaterial;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tmaterial,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tmaterial,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tmaterial,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tmaterial,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\nexport {\n\tcomputeTangents,\n\tmergeBufferGeometries,\n\tmergeBufferAttributes,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups\n};\n"],"names":["$ilwiq","parcelRequire","$2a1b31779937224b$export$9f19d0b0c805745","ShaderMaterial","normalMap","this","uniforms","value","v","setDefine","normalMapType","TangentSpaceNormalMap","Error","constructor","parameters","super","defines","SAMPLES","bvh","$8Zfx2","MeshBVHUniformStruct","radius","seed","normalScale","Vector2","vertexShader","fragmentShader","shaderStructs","shaderIntersectFunction","$5Wq6T","shaderMaterialStructs","pathTracingHelpers","key","Object","defineProperty","get","set","setValues","name","needsUpdate","$5aae44c9b1864d53$var$Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","maxValue","drawImage","$5aae44c9b1864d53$export$2e2bcd8739ae039","$8bda54c3fe4966c9$var$cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","$8bda54c3fe4966c9$var$cachegetUint8Memory0","$8bda54c3fe4966c9$var$getStringFromWasm0","ptr","len","buffer","$8bda54c3fe4966c9$export$3fec8a5f3c4f77fb","Uint8Array","subarray","$8bda54c3fe4966c9$var$heap","Array","fill","undefined","push","$8bda54c3fe4966c9$var$heap_next","$8bda54c3fe4966c9$var$takeObject","idx","ret","$8bda54c3fe4966c9$var$getObject","$8bda54c3fe4966c9$var$dropObject","$8bda54c3fe4966c9$var$cachegetFloat32Memory0","$8bda54c3fe4966c9$var$getFloat32Memory0","Float32Array","$8bda54c3fe4966c9$var$WASM_VECTOR_LEN","$8bda54c3fe4966c9$var$passArrayF32ToWasm0","arg","malloc","$8bda54c3fe4966c9$var$cachegetInt32Memory0","$8bda54c3fe4966c9$var$getInt32Memory0","Int32Array","$8bda54c3fe4966c9$export$77922cbfb2704128","position","normal","texcoord","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","len0","ptr1","len1","ptr2","len2","generateTangents","r0","r1","v3","slice","__wbindgen_free","$8bda54c3fe4966c9$export$54012b4f6e2bf9de","arg0","arg1","obj","$8bda54c3fe4966c9$var$addHeapObject","$8bda54c3fe4966c9$export$195a57d93435a3d3","$8bda54c3fe4966c9$export$af3c031fde264cc6","$8bda54c3fe4966c9$export$28ee1007e174a2a6","fetch","then","res","arrayBuffer","WebAssembly","instantiate","__wbindgen_string_new","__wbindgen_rethrow","result","instance","exports","$02ecdaccaf80df1c$var$renderer","$02ecdaccaf80df1c$var$controls","$02ecdaccaf80df1c$var$camera","$02ecdaccaf80df1c$var$scene","$02ecdaccaf80df1c$var$stats","$02ecdaccaf80df1c$var$fsQuad","$02ecdaccaf80df1c$var$target1","$02ecdaccaf80df1c$var$target2","$02ecdaccaf80df1c$var$materials","$02ecdaccaf80df1c$var$samplesEl","$02ecdaccaf80df1c$var$samples","$02ecdaccaf80df1c$var$totalSamples","$02ecdaccaf80df1c$var$params","resolutionScale","samplesPerFrame","accumulate","pause","$02ecdaccaf80df1c$var$onResize","w","innerWidth","h","innerHeight","dpr","setSize","setPixelRatio","aspect","updateProjectionMatrix","$02ecdaccaf80df1c$var$reset","$02ecdaccaf80df1c$var$animate","requestAnimationFrame","forEach","material","setViewOffset","random","setRenderTarget","render","autoClear","map","texture","opacity","innerText","async","WebGLRenderer","antialias","outputEncoding","sRGBEncoding","body","$RPVlj","FullScreenQuad","MeshBasicMaterial","transparent","PerspectiveCamera","Scene","$5Rd1x","OrbitControls","getElementById","WebGLRenderTarget","type","FloatType","encoding","LinearEncoding","generator","$4CEV9","PathTracingSceneGenerator","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","gltf","group","Group","box","Box3","setFromObject","scene","sphere","Sphere","getBoundingSphere","scale","setScalar","updateMatrixWorld","add","floor","Mesh","CylinderBufferGeometry","MeshStandardMaterial","color","geometry","clearGroups","y","$8bda54c3fe4966c9$exports","ready","traverse","c","attributes","MikkTSpace","negateSign","isReady","getAttributeArray","attribute","normalized","isInterleavedBufferAttribute","srcArray","data","array","dstArray","getCount","itemSize","j","MathUtils","denormalize","getX","getY","getZ","_geometry","index","toNonIndexed","tangents","uv","i1","setAttribute","BufferAttribute","copy","$5e5c8d41d72fb854$export$15356c20484a5e31","$7ePFa","mergeVertices","generate","bvhUniform","updateFrom","materialMap","Map","isMesh","has","dispose","remove","gui","$jiuw3","GUI","onChange","$02ecdaccaf80df1c$var$init"],"version":3,"file":"aoRender.43cc9ddb.js.map"}